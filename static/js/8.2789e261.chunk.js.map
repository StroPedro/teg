{"version":3,"sources":["pages/Blog.js"],"names":["register","number","index","total_sec","withRouter","props","history","useState","email","contrasena","nombre","_id","set_ID","preguntasTraidas","setPreguntasTraida","respuestTraidas","setrespuestTraidas","totalPage","addData","setVal","useContext","Auth","isAuthentificated","setIsAuthentificated","imagen","setPreview","setCargar","cargarPagina","setCargarPagina","setMensajeServidor","setSpinnerHacerPregunta","mensajeError","setMensajeError","HacerPregunta","e","a","preventDefault","console","log","fs","FormData","append","window","sessionStorage","getItem","axios","post","headers","respuesta","respuestaServidor","data","TraerRespues","TraerPreguntas","method","url","datos","docs","useEffect","reader","FileReader","onloadend","result","readAsDataURL","document","readyState","className","onSubmit","editor","ClassicEditor","onChange","getData","type","onClick","ReactHtmlParser","map","timestamp","format"],"mappings":"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","file":"static/js/8.2789e261.chunk.js","sourcesContent":["\r\nimport React , {useState , useEffect , useContext} from \"react\";\r\nimport {CKEditor} from '@ckeditor/ckeditor5-react'\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'\r\nimport { login , registrar } from \"../services/AuthApi\";\r\nimport axios from 'axios'\r\nimport {Link , withRouter} from 'react-router-dom'\r\nimport Auth from '../contexts/Auth'\r\nimport '../styles/blog.css'\r\nimport '../styles/paginacion.css'\r\nimport BarradeNavegacion from '../components/BarradeNavegacion'\r\nimport ReactHtmlParser from \"react-html-parser\"\r\nimport M from 'materialize-css'\r\nimport Loader from \"react-loader-spinner\";\r\nimport  { format , register } from \"timeago.js\"\r\n\r\n//timeago\r\nregister('es_ES', (number, index, total_sec) => [\r\n    ['justo ahora', 'ahora mismo'],\r\n    ['hace %s segundos', 'en %s segundos'],\r\n    ['hace 1 minuto', 'en 1 minuto'],\r\n    ['hace %s minutos', 'en %s minutos'],\r\n    ['hace 1 hora', 'en 1 hora'],\r\n    ['hace %s horas', 'in %s horas'],\r\n    ['hace 1 dia', 'en 1 dia'],\r\n    ['hace %s dias', 'en %s dias'],\r\n    ['hace 1 semana', 'en 1 semana'],\r\n    ['hace %s semanas', 'en %s semanas'],\r\n    ['1 mes', 'en 1 mes'],\r\n    ['hace %s meses', 'en %s meses'],\r\n    ['hace 1 a単o', 'en 1 a単o'],\r\n    ['hace %s a単os', 'en %s a単os']\r\n][index]);\r\nconst timeago = timestamp => format(timestamp, 'es_ES');\r\n////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\nconst Blog = (props) => {\r\n    const {history} = props\r\n\r\n    const [user , setUser] = useState({\r\n        email:'',\r\n        contrasena:''\r\n    })\r\n    const [userR , setUserR] = useState({\r\n        nombre:'',\r\n        email:'',\r\n        contrasena:''\r\n    })\r\n    const [_id , set_ID ] = useState('')\r\n    const [respuestaDbR , setRespuestaDbR ] = useState('')\r\n    const [preguntasTraidas , setPreguntasTraida] = useState([])\r\n    const [respuestTraidas , setrespuestTraidas] = useState([])\r\n    const [respuestaDb , setRespuestaDb ] = useState('')\r\n    const [paginaSiguiente , setPaginaSiguiente ] = useState(1)\r\n    const [paginaAnterior , setPaginaAnterior ] = useState(1)\r\n    const [totalPage , setTotalPage ] = useState(1)\r\n    const [addData , setVal] = useState('')\r\n    const {isAuthentificated , setIsAuthentificated} = useContext(Auth)\r\n    const [probar , setProbar] = useState(true) \r\n    const [imagen , setImagen] = useState('') \r\n    const [preview, setPreview] = useState(\"\"); \r\n    const [cargar, setCargar] = useState(false); \r\n    const [cargarPagina, setCargarPagina] = useState(false); \r\n    const [mensajeServidor, setMensajeServidor] = useState(\"\");\r\n    const [spinnerHacerPregunta, setSpinnerHacerPregunta] = useState(false);\r\n    const [elegirForm, setElegirForm] = useState(true);\r\n    const [datoBusqueda , setDatoBusqueda] = useState([]) \r\n    const [mensajeError , setMensajeError] = useState(\"\");\r\n    const [pageActual , setPageActual] = useState(1)\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n\r\n    const handleChange = ({currentTarget}) => {\r\n        const {name , value} = currentTarget;\r\n        setUser({...user , [name] : value})\r\n        \r\n    }\r\n\r\n    const handleChangeR = ({currentTarget}) => {\r\n        const {name , value} = currentTarget;\r\n        setUserR({...userR , [name] : value})\r\n        console.log(userR)\r\n    }\r\n\r\n\r\n    const HacerPregunta = async (e) => {\r\n        e.preventDefault()\r\n        if (isAuthentificated) {\r\n            setSpinnerHacerPregunta(true)\r\n            console.log(addData)\r\n            const fs = new FormData()\r\n            fs.append(\"user\" , window.sessionStorage.getItem('user'))\r\n            fs.append(\"res\" , addData)\r\n            const respuesta = await axios.post(`https://app-node-react.herokuapp.com/RESPONteg/${_id}`, fs , {headers :{\"Content-Type\":\"multipart/form-data\"}})\r\n            const respuestaServidor = respuesta.data\r\n            console.log(respuestaServidor)\r\n\r\n            \r\n            setMensajeServidor(respuestaServidor)\r\n            setPreview(\"\")\r\n            setVal(\"\")\r\n            await TraerRespues()\r\n\r\n\r\n        }else{\r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n   const BuscarDatos = (e) => {\r\n    setDatoBusqueda(e.target.value) \r\n    \r\n   }\r\n    const BuscarMateria = async (e) =>{\r\n        e.preventDefault()\r\n        const datos = await axios({\r\n            method:'post' , \r\n            url : 'https://app-node-react.herokuapp.com/buscar_pregunta', \r\n            data: {'preguntaQueSeBusca':datoBusqueda}\r\n        })\r\n        \r\n        console.log(datos.data)\r\n        setPreguntasTraida(datos.data)\r\n    }\r\n\r\n\r\n   const CogerDatosEditorTexto = (e , editor) =>{\r\n       const data = editor.getData()\r\n       setVal(data)\r\n       \r\n   }\r\n\r\n\r\n   const TraerPreguntas = async () =>{\r\n    const datos = await axios({\r\n        method:'get' , \r\n        url : 'https://app-node-react.herokuapp.com/cogerPreguntaTeg', \r\n    })\r\n    console.log(datos.data[0][\"_id\"] , \"ffffffffffffffffffffffff\")\r\n    setPreguntasTraida(datos.data)\r\n    //setPaginaSiguiente(datos.data.nextPage)\r\n    //setPaginaAnterior(datos.data.prevPage)\r\n    //setTotalPage(datos.data.totalPages)\r\n    //setPageActual(datos.data.page)\r\n    console.log(totalPage, \"gggggggggggggggggggggggggggggg\")\r\n    if (datos.data) {\r\n        setCargar(true)\r\n        setSpinnerHacerPregunta(false)\r\n        set_ID(datos.data[0][\"_id\"])\r\n    }else{\r\n        setCargar(false)\r\n    }\r\n    console.log(datos.data)\r\n    \r\n  }\r\n\r\n  const TraerRespues = async () =>{\r\n    if (_id) {\r\n        \r\n    }\r\n    const datos = await axios({\r\n        method:'get' , \r\n        url : 'https://app-node-react.herokuapp.com/cogerRespuestasTeg', \r\n    })\r\n    console.log(datos.data , \"ffffffffffffffffffffffff\")\r\n    setrespuestTraidas(datos.data)\r\n    //setPaginaSiguiente(datos.data.nextPage)\r\n    //setPaginaAnterior(datos.data.prevPage)\r\n    //setTotalPage(datos.data.totalPages)\r\n    //setPageActual(datos.data.page)\r\n    console.log(totalPage, \"gggggggggggggggggggggggggggggg\")\r\n    if (datos.data.docs) {\r\n        setCargar(true)\r\n        setSpinnerHacerPregunta(false)\r\n    }else{\r\n        setCargar(false)\r\n    }\r\n    console.log(datos.data)\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleChangeImagen = e =>{\r\n    setImagen(e)\r\n  }\r\n  \r\n       \r\n\r\nconst PaginacionPage = () => {\r\n        const y = []\r\n        var w = \"\"\r\n     \r\n            for (let i = 0; i < totalPage; i++) {\r\n                var e = i+1\r\n                y.push(e)\r\n\r\n                if (pageActual == i+1) {\r\n                }else{\r\n                    \r\n                }\r\n            }\r\n        console.log(w)\r\n\r\n        const lista = y.map((x)=>(\r\n            <>\r\n                {pageActual==x?\r\n                <li  class = \"active paginacion-boton\" ><a href=\"#!\" onClick = { () =>{ \r\n                    const val = \"e\"+ x ;\r\n                    TraerPreguntasConPaginacion(val)}\r\n                } >{x}</a>\r\n                </li>\r\n                :\r\n                <li  class = \"paginacion-boton \" ><a href=\"#!\" onClick = { () =>{ \r\n                    const val = \"e\"+ x ;\r\n                    TraerPreguntasConPaginacion(val)}\r\n                } >{x}</a>\r\n                </li>\r\n                }\r\n  \r\n            </>\r\n\r\n            )                          \r\n        )\r\n        console.log(lista)\r\n    return(\r\n        <ul class=\"pagination\">\r\n            {paginaAnterior?\r\n            <li class=\"waves-effect\"><a href=\"#!\" onClick = { () =>{ \r\n                const val = \"p\"+ paginaAnterior ;\r\n                TraerPreguntasConPaginacion(val)}\r\n               }><i class=\"material-icons\">chevron_left</i></a>\r\n            </li>\r\n            :\r\n            <li class=\"disabled\"><a href=\"#!\" \r\n               ><i class=\"material-icons\">chevron_left</i></a>\r\n            </li>\r\n            }\r\n\r\n\r\n            {lista}\r\n            \r\n            \r\n            {paginaSiguiente?\r\n            <li class=\"waves-effect\"><a href=\"#!\"\r\n             onClick = { () =>{ \r\n                const val = \"n\"+ paginaSiguiente ;\r\n                TraerPreguntasConPaginacion(val)}\r\n               }\r\n            ><i class=\"material-icons\">chevron_right</i></a></li>\r\n            :\r\n            <li class=\"disabled\"><a href=\"#!\" ><i class=\"material-icons\">chevron_right</i></a></li>\r\n            }\r\n\r\n        </ul>\r\n    )\r\n}\r\nuseEffect(()=>{\r\n    \r\n    if (imagen) {\r\n        const reader = new FileReader()\r\n        reader.onloadend = () =>{\r\n            setPreview(reader.result) ;\r\n\r\n        }\r\n        reader.readAsDataURL(imagen)\r\n    }else{\r\n        setPreview(null)\r\n    }\r\n\r\n        if (document.readyState == \"loading\") {\r\n            console.log(cargarPagina)\r\n\r\n        }else{\r\n            \r\n            setCargarPagina(true)\r\n        }\r\n},[imagen] )\r\n\r\n\r\nuseEffect(()=>{\r\n    \r\n    TraerPreguntas()\r\n    TraerRespues()\r\n    \r\n} , [])\r\n\r\nreturn (\r\n    \r\n<div>\r\n    <BarradeNavegacion/>\r\n\r\n    <div className = 'contenedor-pub'>\r\n            <div className=\"container-img-pub  \" >\r\n                <div className =\"row formulario-contenedor-text-editor \" >\r\n                    <form className =\"formulario\" onSubmit ={HacerPregunta}  >\r\n                        <div className=\"editor\">\r\n                            <CKEditor editor= {ClassicEditor} data={addData} onChange={CogerDatosEditorTexto}  />\r\n                        </div>\r\n                        {isAuthentificated ?\"\":                         \r\n                            <div className=\"respuestaError\">\r\n                                <p>{mensajeError}</p>\r\n                            </div>\r\n                        }\r\n                        {isAuthentificated?                \r\n                        <button type=\"submit\" className=\" btnn btn-small\">Publicar</button>:                               \r\n                        <a onClick = {()=>{setMensajeError(\"por favor inicia session\")}}  className=\"btnn btn-small\">Publicar </a>}                                                  \r\n\r\n                    </form>\r\n                </div>\r\n        </div>\r\n    </div>  \r\n    <div className=\"container titulo-biodiversidades\">\r\n        <div className=\"tema-a-debatir\">\r\n            <h1>tema a debatir esta semana</h1>\r\n        </div>\r\n    </div>\r\n    <div className=\"container\">\r\n        <div className=\"contenedor-text-previ-100\">\r\n            <div className=\"contenedor-text-previ-50\">\r\n                <div className=\"contenido-teorico\">\r\n                    {ReactHtmlParser(addData)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>  \r\n\r\n\r\n\r\n\r\n    <div className=\"containe\">\r\n\r\n    {preguntasTraidas.map((datos)=>\r\n            <div className=\"pregunta-de-la-semana-100\">\r\n            <div className=\"pregunta-de-la-semana-50\">\r\n                <p>{datos[\"tegpre\"]}</p>\r\n            </div>\r\n            </div>\r\n    )}\r\n\r\n    </div>\r\n\r\n    <div className=\"container titulo-biodiversidades\">\r\n        <div className=\"tema-a-debatir\">\r\n            <h1>Respuestas</h1>\r\n        </div>\r\n    </div>\r\n    <div className=\"containe\">\r\n       \r\n\r\n        {respuestTraidas.map((datos)=>\r\n            <div className=\"res-de-la-semana-100\">\r\n         \r\n               <div className=\"res-de-la-semana-50-100\">\r\n                   <div className=\"res-de-la-semana-50-50\">\r\n                   <div className=\"user-res margen-iz\">\r\n                       <span>{datos[\"user\"]}</span>\r\n                   </div>\r\n                   <div className=\"fechas-res margen-iz\">\r\n                       <span>{timeago(datos[\"fecha\"])}</span>\r\n                   </div>\r\n                   <div>\r\n                       <p>{datos[\"numresp\"]}</p>\r\n                   </div>\r\n                   </div>\r\n               </div>\r\n      \r\n               <div className=\"res-de-la-semana-50-100\">\r\n                   <div className=\"res-de-la-semana-50-50\">\r\n                        <div className=\"res-de-la-semana-50-50-p\">\r\n                            <p>{ReactHtmlParser(datos[\"tegres\"])}</p>\r\n                        </div>\r\n                        \r\n                   </div>\r\n\r\n               </div>\r\n      \r\n          </div>\r\n        )}\r\n\r\n\r\n \r\n    </div>\r\n    \r\n</div>\r\n    )\r\n}\r\nexport default withRouter(Blog);"],"sourceRoot":""}